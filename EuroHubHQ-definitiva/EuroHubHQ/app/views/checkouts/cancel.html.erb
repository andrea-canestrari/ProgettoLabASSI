<head>
    <style>


        .rectangle:first-child {
    grid-column: -20/span 4;
    grid-row: -5;
    background-color:#555abf;
}

.rectangle:nth-child(2) {
    grid-column: viewport-start/span 4;
    grid-row: -4;
    background-color: #c4f0ff;
}

.rectangle:nth-child(3) {
    grid-column: 5/span 3;
    grid-row: -4;
    background-color: #7795f8;
 
}

.rectangle:nth-child(4) {
    grid-column: 17/span 4;
    grid-row: -4;
    background-color: #7795f8;
}


.rectangle:nth-child(5) {
    grid-column: -5/viewport-end;
    grid-row: -4;
    background-color: #555abf;
  position: relative;

}

.rectangle:nth-child(6) {
    grid-column: -8/span 4;
    grid-row: -3;
    background-color: #2bbbee;
}










.outercontainer {
    position: relative;
    z-index: 1;
  max-width: 1040px;
  margin: 0 auto;
padding: 0 20px;
width: 100%;
  box-sizing: border-box;
}

.outercontainer2 {
padding: 30px 60px;
border-bottom: 2px solid rgba(207,215,223,.25);
position: relative;

background-color: #fff;

border-radius: 8px;

padding: 30px;

-webkit-box-shadow: 0 30px 60px -12px rgba(50,50,93,.25),0 18px 36px -18px rgba(0,0,0,.3);

box-shadow: 0 30px 60px -12px rgba(50,50,93,.25),0 18px 36px -18px rgba(0,0,0,.3);
  
box-sizing: border-box;
}

.outercontainer3 {
  text-align: center;
}

.realoutercontainer {
  padding: 90px 0;
  position:relative;  
}


.outercontainer4 h1 {
  font-size: 36px;
  margin-bottom: 25px;
  color: #32325d;
}

.outercontainer4 p {
  font-size: 18px;
  color: #525f7f;
}

.outercontainer4 {
  width: 50%;
  margin: 10px auto;
}


/* General code starts */
.common-rectangleGrid {
 --rectangle-height:48px;
 --content-columns:12;
 --gutter-columns:4;
 position:absolute;
 width:100%;
 top:0;
 bottom:0;
 z-index:-1;
 pointer-events:none
}

.common-rectangleGrid .backgroundContainer,.common-rectangleGrid .rectangleContainer {
  width:100%;
 height:100%;
 display:-webkit-box;
 display:-ms-flexbox;
 display:flex;
 -webkit-box-orient:vertical;
 -webkit-box-direction:normal;
 -ms-flex-direction:column;
 flex-direction:column;
 -webkit-box-align:center;
 -ms-flex-align:center;
 align-items:center;
 position:absolute;
 -webkit-transform:skewY(-12deg);
 transform:skewY(-12deg);
}
.common-rectangleGrid .backgroundContainer .grid {
 grid-template-columns:1fr;
 min-width:0
}
.common-rectangleGrid .backgroundContainer .background {
 grid-row:1/-1;
 grid-column:1/-1;
 z-index:-1
}
.common-rectangleGrid .rectangleContainer {
 overflow:hidden
}
.common-rectangleGrid.original .backgroundContainer,.common-rectangleGrid.original .rectangleContainer {
  justify-content:flex-end;
 -webkit-box-pack:end;
 -ms-flex-pack:end;
}
.common-rectangleGrid.original .grid {
 height:200%;
 -ms-flex-line-pack:end;
 align-content:end;
}
.common-rectangleGrid .grid {
 --content-column-width:minmax(0,calc(1040px / var(--content-columns)));
 --gutter-column-width:1fr;
 position:absolute;
 width:100%;
 height:100%;
 display:grid;
 grid-template-rows:repeat(auto-fill,var(--rectangle-height));
 grid-template-columns:[viewport-start] 1fr [left-gutter-start] repeat(var(--gutter-columns),var(--gutter-column-width)) [left-gutter-end content-start] repeat(var(--content-columns),var(--content-column-width)) [content-end right-gutter-start] repeat(var(--gutter-columns),var(--gutter-column-width)) [right-gutter-end] 1fr [viewport-end];
}

@media (min-width:1040px) {
 .common-rectangleGrid .grid {
  --gutter-column-width:var(--content-column-width);
  min-width:calc(1040px / var(--content-columns) * (var(--gutter-columns) * 2 + var(--content-columns)))
 }
}

@media (min-width:670px) {
 .common-rectangleGrid {
  --rectangle-height:64px;
 }
}
  
  
@media only screen and (max-width: 670px) 
{   
.outercontainer4 {
  width: 90%;
}
  }





svg {
    width: 65px;
    margin: inherit;
    height: 65px;
    transition: transform .5s ease-out;
    #red-exclamation {
      animation: bounce .5s ease-out forwards;
      transform-origin: center center;
      .exclamation {
        opacity: 0;
        stroke-dasharray: 100;
        stroke-dashoffset: 100;
        animation: excl 1.5s ease forwards .5s;
      }
      .dot {
        opacity: 0;
        stroke-width: 30;
        stroke-linecap: round;
        animation: dot-fade .175s ease forwards .7s;
      }
    }
  }

@keyframes excl {
  0% {
    stroke-dashoffset: 100;
  }
  10% {
    opacity: 1;
  }
  100% {
    opacity: 1;
    stroke-dashoffset: 0;
  }
}

@keyframes dot-fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes bounce {
  0% {
    opacity: 0;
    transform: scale(0.1);
  }
  50% {
    transform: scale(1.0);
  }
  75% {
    transform: scale(0.6);
  }
  100% {
    opacity: 1;
    transform: scale(0.9);
  }
}











        </style>
    </head>



<div class="realoutercontainer">
  <div class="outercontainer">
    <div class="outercontainer2">
      <div class="outercontainer3">
        <div class="outercontainer4">
          <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="45px" height="45px" viewBox="0 0 45 45" version="1.1">
  <title>red_status</title>
  <defs>
    <path d="M8.43205769 38.1906149C2.90905516 38.17423 0.630739568 34.2579195 3.34303632 29.4437542L16.0266682 6.93106212C18.7390819 2.11668929 23.1497045 2.11171534 25.8729434 6.91091845L38.7464812 29.5981394C41.4720152 34.4013872 39.1981662 38.2818882 33.6812163 38.2655212L8.43205769 38.1906149Z" id="path-1"/>
    <filter x="-50%" y="-50%" width="200%" height="200%" filterUnits="objectBoundingBox" id="filter-2">
      <feOffset dx="-2" dy="2" in="SourceAlpha" result="shadowOffsetOuter1"/>
      <feGaussianBlur stdDeviation="1" in="shadowOffsetOuter1" result="shadowBlurOuter1"/>
      <feComposite in="shadowBlurOuter1" in2="SourceAlpha" operator="out" result="shadowBlurOuter1"/>
      <feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.245216259 0" type="matrix" in="shadowBlurOuter1"/>
    </filter>
    <filter x="-50%" y="-50%" width="200%" height="200%" filterUnits="objectBoundingBox" id="filter-3">
      <feOffset dx="0" dy="1" in="SourceAlpha" result="shadowOffsetInner1"/>
      <feComposite in="shadowOffsetInner1" in2="SourceAlpha" operator="arithmetic" k2="-1" k3="1" result="shadowInnerInner1"/>
      <feColorMatrix values="0 0 0 0 1   0 0 0 0 1   0 0 0 0 1  0 0 0 0.4 0" type="matrix" in="shadowInnerInner1"/>
    </filter>
  </defs>
<g id="red-exclamation" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" transform="translate(0.000000, -1.000000)">
  <g id="Rectangle-134">
    <use fill="black" fill-opacity="1" filter="url(#filter-2)" xlink:href="#path-1" />
    <use fill="#F1342F" fill-rule="evenodd" xlink:href="#path-1" />
    <use fill="black" fill-opacity="1" filter="url(#filter-3)" xlink:href="#path-1" />
    <use xlink:href="#path-1" />
  </g>
  <line class="exclamation" x1="21" y1="11" x2="21" y2="25" stroke-linecap="round" stroke="#fff" stroke-width="4" />
  <circle class="dot" cx="21" cy="32" r="2" fill="#fff" />
</g>
</svg>
          <h1>Payment aborted!</h1>
          <p>Something went wrong with the payment... <%= link_to root_path class: "link" do  %>Click here to return home.<% end %></p>
          <p>
          </div>
      </div>
    </div>
  </div>


  <div class="common-rectangleGrid original">
    <!-- Background -->
    <div class="backgroundContainer">
      <div class="grid">
        <div class="background"></div>
      </div>
    </div>
    <!-- rectangles -->
    <div class="rectangleContainer">
      <div class="grid">
        <div class="rectangle"></div>
        <div class="rectangle"></div>
        <div class="rectangle"></div>
        <div class="rectangle"></div>
        <div class="rectangle"></div>
        <div class="rectangle"></div>
        <div class="rectangle"></div>
      </div>
    </div>
  </div>
</div>